/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/models/suzanne.gltf -t 
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Suzanne: THREE.Mesh
  }
  materials: {
    [key: string]: THREE.Material
  }
  animations: THREE.AnimationClip[]
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function Suzanne(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/suzanne.gltf') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Suzanne.geometry} material={materials.Material} position={[0, 0.189, -0.043]} />
    </group>
  )
}

useGLTF.preload('/suzanne.gltf')