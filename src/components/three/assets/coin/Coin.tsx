/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.12 --types /Users/ebowwa/simulation/public/models/coin.glb 
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Coin__CoinMat00: THREE.SkinnedMesh
    Coin_2: THREE.Bone
  }
  materials: {
    CoinMat00: THREE.MeshStandardMaterial
  }
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['skinnedMesh'] | JSX.IntrinsicElements['bone']>>

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('https://cdn.jsdelivr.net/gh/ebowwar/threejs-assets@main/coin.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <primitive object={nodes.Coin_2} />
      <skinnedMesh geometry={nodes.Coin__CoinMat00.geometry} material={materials.CoinMat00} skeleton={nodes.Coin__CoinMat00.skeleton} />
    </group>
  )
}

useGLTF.preload('https://cdn.jsdelivr.net/gh/ebowwar/threejs-assets@main/coin.glb')
